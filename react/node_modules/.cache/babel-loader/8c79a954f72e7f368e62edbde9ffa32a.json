{"ast":null,"code":"import _taggedTemplateLiteral from \"/Users/GM/Desktop/weather-api/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";\nvar _jsxFileName = \"/Users/GM/Desktop/weather-api/src/Components/Api.jsx\";\n\nfunction _templateObject2() {\n  const data = _taggedTemplateLiteral([\"\\n  width: 200px;\\n  border: 1px solid gray;\\n  display: block;\\n  padding: 15px;\\n  margin: 10px auto;\\n  border-radius: 4px;\\n  font-size: 18px;\\n\\n  ::placeholder {\\n    color: teal;\\n  }\\n\\n  :focus {\\n    outline: red;\\n  }\\n\"]);\n\n  _templateObject2 = function () {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject() {\n  const data = _taggedTemplateLiteral([\"\\n  background: pink;\\n  border: 0.5px solid gray;\\n  padding: 5px;\\n  width: 80px;\\n  margin: 10px auto;\\n  display: block;\\n  font-size: 1.6rem;\\n  border-radius: 4px;\\n\"]);\n\n  _templateObject = function () {\n    return data;\n  };\n\n  return data;\n}\n\nimport React, { Component } from \"react\";\nimport axios from \"axios\";\nimport styled from \"styled-components\";\nimport Wrapper from \"./HOC/Wrapper\";\nconst geoApiToken = \"pk.eyJ1IjoiZGllZ29tZmciLCJhIjoiY2p3eTU0b2pwMDBuZTQ5bzFzbnF1NnA3MSJ9.4PNeV8Pr0pye2xVU6VxIFw\";\nconst darkApiToken = \"5f92cde30212ee856099ea49f362a583\";\nconst Button = styled.button(_templateObject());\nconst Input = styled.input(_templateObject2());\n\nclass Api extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      geolocationUrl: \"https://api.mapbox.com/geocoding/v5/mapbox.places/Valera%20Trujillo.json?access_token=\".concat(geoApiToken),\n      darkskyUrl: \"https://api.darksky.net/forecast/\".concat(darkApiToken, \"/0,0\")\n    };\n\n    this.fetchGeolocation = async () => {\n      try {\n        let response = await axios.get(this.state.geolocationUrl); // const { center } = response.data.features[0];\n\n        console.log(response.data.features[0]); // console.log(center);\n        // console.log(lat);\n\n        this.setState({\n          lat: center[0],\n          long: center[1],\n          darkskyUrl: \"https://api.darksky.net/forecast/\".concat(darkApiToken, \"/\").concat(center[0], \",\").concat(center[1])\n        });\n        console.log(this.state.darkskyUrl);\n      } catch (error) {\n        console.log(\"Error\");\n        console.log(error);\n      }\n    };\n  }\n\n  render() {\n    return React.createElement(Wrapper, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70\n      },\n      __self: this\n    }, \"API page\"), React.createElement(Input, {\n      placeholder: \"Enter location here\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71\n      },\n      __self: this\n    }), React.createElement(Button, {\n      onClick: this.fetchGeolocation,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72\n      },\n      __self: this\n    }, \"Hello\"));\n  }\n\n}\n\nexport default Api;","map":{"version":3,"sources":["/Users/GM/Desktop/weather-api/src/Components/Api.jsx"],"names":["React","Component","axios","styled","Wrapper","geoApiToken","darkApiToken","Button","button","Input","input","Api","state","geolocationUrl","darkskyUrl","fetchGeolocation","response","get","console","log","data","features","setState","lat","center","long","error","render"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,OAAOC,OAAP,MAAoB,eAApB;AACA,MAAMC,WAAW,GACf,4FADF;AAEA,MAAMC,YAAY,GAAG,kCAArB;AAEA,MAAMC,MAAM,GAAGJ,MAAM,CAACK,MAAV,mBAAZ;AAWA,MAAMC,KAAK,GAAGN,MAAM,CAACO,KAAV,oBAAX;;AAkBA,MAAMC,GAAN,SAAkBV,SAAlB,CAA4B;AAAA;AAAA;AAAA,SAC1BW,KAD0B,GAClB;AACNC,MAAAA,cAAc,kGAA2FR,WAA3F,CADR;AAENS,MAAAA,UAAU,6CAAsCR,YAAtC;AAFJ,KADkB;;AAAA,SAO1BS,gBAP0B,GAOP,YAAY;AAC7B,UAAI;AACF,YAAIC,QAAQ,GAAG,MAAMd,KAAK,CAACe,GAAN,CAAU,KAAKL,KAAL,CAAWC,cAArB,CAArB,CADE,CAEF;;AACAK,QAAAA,OAAO,CAACC,GAAR,CAAYH,QAAQ,CAACI,IAAT,CAAcC,QAAd,CAAuB,CAAvB,CAAZ,EAHE,CAIF;AACA;;AACA,aAAKC,QAAL,CAAc;AACZC,UAAAA,GAAG,EAAEC,MAAM,CAAC,CAAD,CADC;AAEZC,UAAAA,IAAI,EAAED,MAAM,CAAC,CAAD,CAFA;AAGZV,UAAAA,UAAU,6CAAsCR,YAAtC,cACRkB,MAAM,CAAC,CAAD,CADE,cAENA,MAAM,CAAC,CAAD,CAFA;AAHE,SAAd;AAQAN,QAAAA,OAAO,CAACC,GAAR,CAAY,KAAKP,KAAL,CAAWE,UAAvB;AACD,OAfD,CAeE,OAAOY,KAAP,EAAc;AACdR,QAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ;AACAD,QAAAA,OAAO,CAACC,GAAR,CAAYO,KAAZ;AACD;AACF,KA3ByB;AAAA;;AA6B1BC,EAAAA,MAAM,GAAG;AACP,WACE,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,EAEE,oBAAC,KAAD;AAAO,MAAA,WAAW,EAAC,qBAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFF,EAGE,oBAAC,MAAD;AAAQ,MAAA,OAAO,EAAE,KAAKZ,gBAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAHF,CADF;AAOD;;AArCyB;;AAwC5B,eAAeJ,GAAf","sourcesContent":["import React, { Component } from \"react\";\nimport axios from \"axios\";\nimport styled from \"styled-components\";\nimport Wrapper from \"./HOC/Wrapper\";\nconst geoApiToken =\n  \"pk.eyJ1IjoiZGllZ29tZmciLCJhIjoiY2p3eTU0b2pwMDBuZTQ5bzFzbnF1NnA3MSJ9.4PNeV8Pr0pye2xVU6VxIFw\";\nconst darkApiToken = \"5f92cde30212ee856099ea49f362a583\";\n\nconst Button = styled.button`\n  background: pink;\n  border: 0.5px solid gray;\n  padding: 5px;\n  width: 80px;\n  margin: 10px auto;\n  display: block;\n  font-size: 1.6rem;\n  border-radius: 4px;\n`;\n\nconst Input = styled.input`\n  width: 200px;\n  border: 1px solid gray;\n  display: block;\n  padding: 15px;\n  margin: 10px auto;\n  border-radius: 4px;\n  font-size: 18px;\n\n  ::placeholder {\n    color: teal;\n  }\n\n  :focus {\n    outline: red;\n  }\n`;\n\nclass Api extends Component {\n  state = {\n    geolocationUrl: `https://api.mapbox.com/geocoding/v5/mapbox.places/Valera%20Trujillo.json?access_token=${geoApiToken}`,\n    darkskyUrl: `https://api.darksky.net/forecast/${darkApiToken}/0,0`\n  };\n\n  // NO CORS header. Request blocked\n  fetchGeolocation = async () => {\n    try {\n      let response = await axios.get(this.state.geolocationUrl);\n      // const { center } = response.data.features[0];\n      console.log(response.data.features[0]);\n      // console.log(center);\n      // console.log(lat);\n      this.setState({\n        lat: center[0],\n        long: center[1],\n        darkskyUrl: `https://api.darksky.net/forecast/${darkApiToken}/${\n          center[0]\n        },${center[1]}`\n      });\n\n      console.log(this.state.darkskyUrl);\n    } catch (error) {\n      console.log(\"Error\");\n      console.log(error);\n    }\n  };\n\n  render() {\n    return (\n      <Wrapper>\n        <h1>API page</h1>\n        <Input placeholder=\"Enter location here\" />\n        <Button onClick={this.fetchGeolocation}>Hello</Button>\n      </Wrapper>\n    );\n  }\n}\n\nexport default Api;\n"]},"metadata":{},"sourceType":"module"}